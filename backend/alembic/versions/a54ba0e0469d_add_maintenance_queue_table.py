"""add_maintenance_queue_table

Revision ID: a54ba0e0469d
Revises: d973d92e81cf
Create Date: 2025-06-08 00:09:38.242835

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'a54ba0e0469d'
down_revision: Union[str, None] = 'd973d92e81cf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('maintenance_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_type', sa.String(length=50), nullable=False),
    sa.Column('task_data', sa.JSON(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('maintenance_queue', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_maintenance_queue_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_maintenance_queue_priority'), ['priority'], unique=False)
        batch_op.create_index(batch_op.f('ix_maintenance_queue_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_maintenance_queue_task_type'), ['task_type'], unique=False)

    with op.batch_alter_table('global_lore', schema=None) as batch_op:
        batch_op.drop_index('ix_global_lore_title')

    op.drop_table('global_lore')
    with op.batch_alter_table('active_session_events', schema=None) as batch_op:
        batch_op.drop_index('ix_active_session_events_event_id')
        batch_op.drop_index('ix_active_session_events_session_id')

    op.drop_table('active_session_events')
    op.drop_table('temp_message_variants')
    with op.batch_alter_table('user_prompt_instructions', schema=None) as batch_op:
        batch_op.drop_index('ix_user_prompt_instructions_id')

    op.drop_table('user_prompt_instructions')
    op.drop_table('full_analysis_results')
    op.drop_table('temp_variant_analysis')
    op.drop_table('temp_variant_memory')
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.drop_column('uuid')

    with op.batch_alter_table('extracted_knowledge', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.alter_column('chat_session_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.alter_column('source_message_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('user_settings', schema=None) as batch_op:
        batch_op.drop_column('reasoning_exclude_tokens')
        batch_op.drop_column('reasoning_max_tokens')
        batch_op.drop_column('planning_llm_model')
        batch_op.drop_column('planning_llm_api_key')
        batch_op.drop_column('reasoning_effort')
        batch_op.drop_column('reasoning_mode')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_settings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reasoning_mode', sa.VARCHAR(), nullable=True))
        batch_op.add_column(sa.Column('reasoning_effort', sa.VARCHAR(), nullable=True))
        batch_op.add_column(sa.Column('planning_llm_api_key', sa.VARCHAR(), nullable=True))
        batch_op.add_column(sa.Column('planning_llm_model', sa.VARCHAR(), nullable=True))
        batch_op.add_column(sa.Column('reasoning_max_tokens', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('reasoning_exclude_tokens', sa.BOOLEAN(), nullable=False))

    with op.batch_alter_table('extracted_knowledge', schema=None) as batch_op:
        batch_op.alter_column('source_message_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
        batch_op.alter_column('chat_session_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('uuid', sa.VARCHAR(), nullable=True))

    op.create_table('temp_variant_memory',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('variant_id', sa.VARCHAR(), nullable=False),
    sa.Column('chat_session_id', sa.VARCHAR(), nullable=False),
    sa.Column('faiss_vector_id', sa.VARCHAR(), nullable=False),
    sa.Column('vector_content', sa.TEXT(), nullable=False),
    sa.Column('vector_metadata', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chat_sessions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['variant_id'], ['temp_message_variants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('temp_variant_analysis',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('variant_id', sa.VARCHAR(), nullable=False),
    sa.Column('chat_session_id', sa.VARCHAR(), nullable=False),
    sa.Column('analysis_data', sqlite.JSON(), nullable=False),
    sa.Column('user_message_content', sa.TEXT(), nullable=False),
    sa.Column('ai_response_content', sa.TEXT(), nullable=False),
    sa.Column('rag_results', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chat_sessions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['variant_id'], ['temp_message_variants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('full_analysis_results',
    sa.Column('id', sa.NUMERIC(), nullable=False),
    sa.Column('chat_session_id', sa.NUMERIC(), nullable=False),
    sa.Column('source_message_id', sa.NUMERIC(), nullable=False),
    sa.Column('analysis_data', sqlite.JSON(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chat_sessions.id'], ),
    sa.ForeignKeyConstraint(['source_message_id'], ['chat_messages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_prompt_instructions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('primary_instructions', sa.TEXT(), nullable=True),
    sa.Column('extraction_instructions', sa.TEXT(), nullable=True),
    sa.Column('analysis_instructions', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_prompt_instructions', schema=None) as batch_op:
        batch_op.create_index('ix_user_prompt_instructions_id', ['id'], unique=False)

    op.create_table('temp_message_variants',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('original_message_id', sa.VARCHAR(), nullable=False),
    sa.Column('chat_session_id', sa.VARCHAR(), nullable=False),
    sa.Column('variant_index', sa.INTEGER(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('sender_type', sa.VARCHAR(), nullable=False),
    sa.Column('active_persona_name', sa.VARCHAR(), nullable=True),
    sa.Column('active_persona_image_url', sa.VARCHAR(), nullable=True),
    sa.Column('message_metadata', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chat_sessions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['original_message_id'], ['chat_messages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('active_session_events',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('session_id', sa.VARCHAR(), nullable=False),
    sa.Column('event_id', sa.VARCHAR(), nullable=False),
    sa.Column('current_phase_id', sa.VARCHAR(), nullable=True),
    sa.Column('status', sa.VARCHAR(), nullable=False),
    sa.Column('event_type', sa.VARCHAR(), nullable=False),
    sa.Column('dynamic_event_data', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('active_session_events', schema=None) as batch_op:
        batch_op.create_index('ix_active_session_events_session_id', ['session_id'], unique=False)
        batch_op.create_index('ix_active_session_events_event_id', ['event_id'], unique=False)

    op.create_table('global_lore',
    sa.Column('id', sa.CHAR(length=32), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('global_lore', schema=None) as batch_op:
        batch_op.create_index('ix_global_lore_title', ['title'], unique=False)

    with op.batch_alter_table('maintenance_queue', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_maintenance_queue_task_type'))
        batch_op.drop_index(batch_op.f('ix_maintenance_queue_status'))
        batch_op.drop_index(batch_op.f('ix_maintenance_queue_priority'))
        batch_op.drop_index(batch_op.f('ix_maintenance_queue_id'))

    op.drop_table('maintenance_queue')
    # ### end Alembic commands ###
