"""Add user prompt instructions table

Revision ID: d36d69b2853e
Revises: c4a8ad1b4cda
Create Date: 2025-06-02 20:35:20.355919

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'd36d69b2853e'
down_revision: Union[str, None] = 'c4a8ad1b4cda'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('global_lore', schema=None) as batch_op:
        batch_op.drop_index('ix_global_lore_title')

    op.drop_table('global_lore')
    with op.batch_alter_table('user_prompt_instructions', schema=None) as batch_op:
        batch_op.drop_index('ix_user_prompt_instructions_id')

    op.drop_table('user_prompt_instructions')
    op.drop_table('full_analysis_results')
    with op.batch_alter_table('extracted_knowledge', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.alter_column('chat_session_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.alter_column('source_message_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('extracted_knowledge', schema=None) as batch_op:
        batch_op.alter_column('source_message_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
        batch_op.alter_column('chat_session_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    op.create_table('full_analysis_results',
    sa.Column('id', sa.NUMERIC(), nullable=False),
    sa.Column('chat_session_id', sa.NUMERIC(), nullable=False),
    sa.Column('source_message_id', sa.NUMERIC(), nullable=False),
    sa.Column('analysis_data', sqlite.JSON(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chat_sessions.id'], ),
    sa.ForeignKeyConstraint(['source_message_id'], ['chat_messages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_prompt_instructions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('primary_instructions', sa.TEXT(), nullable=True),
    sa.Column('extraction_instructions', sa.TEXT(), nullable=True),
    sa.Column('analysis_instructions', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_prompt_instructions', schema=None) as batch_op:
        batch_op.create_index('ix_user_prompt_instructions_id', ['id'], unique=False)

    op.create_table('global_lore',
    sa.Column('id', sa.CHAR(length=32), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('global_lore', schema=None) as batch_op:
        batch_op.create_index('ix_global_lore_title', ['title'], unique=False)

    # ### end Alembic commands ###
