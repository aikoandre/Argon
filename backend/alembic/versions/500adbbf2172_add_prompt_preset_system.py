"""add_prompt_preset_system

Revision ID: 500adbbf2172
Revises: b7c2df818992
Create Date: 2025-06-18 13:20:23.403788

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '500adbbf2172'
down_revision: Union[str, None] = 'b7c2df818992'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_prompt_configurations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_prompt_configurations_preset_id'))
        batch_op.drop_index(batch_op.f('ix_user_prompt_configurations_user_id'))

    op.drop_table('user_prompt_configurations')
    op.drop_table('session_lore_modifications')
    with op.batch_alter_table('active_session_events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_active_session_events_event_id'))
        batch_op.drop_index(batch_op.f('ix_active_session_events_session_id'))

    op.drop_table('active_session_events')
    op.drop_table('user_prompt_instructions')
    with op.batch_alter_table('prompt_modules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_prompt_modules_category'))
        batch_op.drop_index(batch_op.f('ix_prompt_modules_enabled'))
        batch_op.drop_index(batch_op.f('ix_prompt_modules_preset_id'))

    op.drop_table('prompt_modules')
    op.drop_table('prompt_presets')
    with op.batch_alter_table('global_lore', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_global_lore_title'))

    op.drop_table('global_lore')
    op.drop_table('session_cache_facts')
    with op.batch_alter_table('extracted_knowledge', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.alter_column('chat_session_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.alter_column('source_message_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('lore_entries', schema=None) as batch_op:
        batch_op.alter_column('is_dynamically_generated',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
        batch_op.drop_index(batch_op.f('idx_lore_entries_dynamic'))
        batch_op.create_index(batch_op.f('ix_lore_entries_is_dynamically_generated'), ['is_dynamically_generated'], unique=False)

    with op.batch_alter_table('user_settings', schema=None) as batch_op:
        batch_op.alter_column('analysis_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('maintenance_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('embedding_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('primary_llm_temperature',
               existing_type=sa.FLOAT(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('primary_llm_top_p',
               existing_type=sa.FLOAT(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('primary_llm_reasoning_effort',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('analysis_llm_temperature',
               existing_type=sa.FLOAT(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('analysis_llm_top_p',
               existing_type=sa.FLOAT(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('analysis_llm_reasoning_effort',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('maintenance_llm_temperature',
               existing_type=sa.FLOAT(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('maintenance_llm_top_p',
               existing_type=sa.FLOAT(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('maintenance_llm_reasoning_effort',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               existing_nullable=True)
        batch_op.drop_column('primary_llm_top_k')
        batch_op.drop_column('primary_llm_repetition_penalty')
        batch_op.drop_column('primary_llm_top_a')
        batch_op.drop_column('primary_llm_frequency_penalty')
        batch_op.drop_column('primary_llm_presence_penalty')
        batch_op.drop_column('primary_llm_min_p')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_settings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('primary_llm_min_p', sa.REAL(), nullable=True))
        batch_op.add_column(sa.Column('primary_llm_presence_penalty', sa.REAL(), server_default=sa.text('(0.0)'), nullable=True))
        batch_op.add_column(sa.Column('primary_llm_frequency_penalty', sa.REAL(), server_default=sa.text('(0.0)'), nullable=True))
        batch_op.add_column(sa.Column('primary_llm_top_a', sa.REAL(), nullable=True))
        batch_op.add_column(sa.Column('primary_llm_repetition_penalty', sa.REAL(), server_default=sa.text('(1.0)'), nullable=True))
        batch_op.add_column(sa.Column('primary_llm_top_k', sa.INTEGER(), nullable=True))
        batch_op.alter_column('maintenance_llm_reasoning_effort',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'Medium'"),
               existing_nullable=True)
        batch_op.alter_column('maintenance_llm_top_p',
               existing_type=sa.FLOAT(),
               server_default=sa.text('(1.0)'),
               existing_nullable=True)
        batch_op.alter_column('maintenance_llm_temperature',
               existing_type=sa.FLOAT(),
               server_default=sa.text('(1.0)'),
               existing_nullable=True)
        batch_op.alter_column('analysis_llm_reasoning_effort',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'Medium'"),
               existing_nullable=True)
        batch_op.alter_column('analysis_llm_top_p',
               existing_type=sa.FLOAT(),
               server_default=sa.text('(1.0)'),
               existing_nullable=True)
        batch_op.alter_column('analysis_llm_temperature',
               existing_type=sa.FLOAT(),
               server_default=sa.text('(1.0)'),
               existing_nullable=True)
        batch_op.alter_column('primary_llm_reasoning_effort',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'Medium'"),
               existing_nullable=True)
        batch_op.alter_column('primary_llm_top_p',
               existing_type=sa.FLOAT(),
               server_default=sa.text('(1.0)'),
               existing_nullable=True)
        batch_op.alter_column('primary_llm_temperature',
               existing_type=sa.FLOAT(),
               server_default=sa.text('(1.0)'),
               existing_nullable=True)
        batch_op.alter_column('embedding_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('(TRUE)'),
               existing_nullable=True)
        batch_op.alter_column('maintenance_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('(TRUE)'),
               existing_nullable=True)
        batch_op.alter_column('analysis_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('(TRUE)'),
               existing_nullable=True)

    with op.batch_alter_table('lore_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lore_entries_is_dynamically_generated'))
        batch_op.create_index(batch_op.f('idx_lore_entries_dynamic'), ['is_dynamically_generated'], unique=False)
        batch_op.alter_column('is_dynamically_generated',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('(FALSE)'),
               nullable=True)

    with op.batch_alter_table('extracted_knowledge', schema=None) as batch_op:
        batch_op.alter_column('source_message_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
        batch_op.alter_column('chat_session_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    op.create_table('session_cache_facts',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('chat_session_id', sa.VARCHAR(), nullable=False),
    sa.Column('text', sa.TEXT(), nullable=False),
    sa.Column('key', sa.VARCHAR(), nullable=True),
    sa.Column('value', sa.TEXT(), nullable=True),
    sa.Column('relevance_score', sa.FLOAT(), nullable=True),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chat_sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('global_lore',
    sa.Column('id', sa.CHAR(length=32), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('global_lore', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_global_lore_title'), ['title'], unique=False)

    op.create_table('prompt_presets',
    sa.Column('id', sa.TEXT(), nullable=True),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=True),
    sa.Column('is_sillytavern_compatible', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prompt_modules',
    sa.Column('id', sa.TEXT(), nullable=True),
    sa.Column('preset_id', sa.TEXT(), nullable=False),
    sa.Column('identifier', sa.TEXT(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('category', sa.TEXT(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), server_default=sa.text('(TRUE)'), nullable=True),
    sa.Column('injection_position', sa.TEXT(), nullable=True),
    sa.Column('injection_depth', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('injection_order', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('forbid_overrides', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=True),
    sa.Column('role', sa.TEXT(), server_default=sa.text("'system'"), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['preset_id'], ['prompt_presets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('prompt_modules', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_prompt_modules_preset_id'), ['preset_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_prompt_modules_enabled'), ['enabled'], unique=False)
        batch_op.create_index(batch_op.f('ix_prompt_modules_category'), ['category'], unique=False)

    op.create_table('user_prompt_instructions',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('primary_instructions', sa.TEXT(), server_default=sa.text("('')"), nullable=True),
    sa.Column('extraction_instructions', sa.TEXT(), server_default=sa.text("('')"), nullable=True),
    sa.Column('analysis_instructions', sa.TEXT(), server_default=sa.text("('')"), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('active_session_events',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('session_id', sa.VARCHAR(), nullable=False),
    sa.Column('event_id', sa.VARCHAR(), nullable=False),
    sa.Column('current_phase_id', sa.VARCHAR(), nullable=True),
    sa.Column('status', sa.VARCHAR(), nullable=False),
    sa.Column('event_type', sa.VARCHAR(), nullable=False),
    sa.Column('dynamic_event_data', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('active_session_events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_active_session_events_session_id'), ['session_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_active_session_events_event_id'), ['event_id'], unique=False)

    op.create_table('session_lore_modifications',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('chat_session_id', sa.VARCHAR(), nullable=False),
    sa.Column('base_lore_entry_id', sa.VARCHAR(), nullable=False),
    sa.Column('field_to_update', sa.VARCHAR(), nullable=False),
    sa.Column('new_content_segment', sa.TEXT(), nullable=False),
    sa.Column('change_reason', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['base_lore_entry_id'], ['lore_entries.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chat_sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_prompt_configurations',
    sa.Column('id', sa.TEXT(), nullable=True),
    sa.Column('user_id', sa.TEXT(), nullable=False),
    sa.Column('active_preset_id', sa.TEXT(), nullable=True),
    sa.Column('temperature', sa.REAL(), server_default=sa.text('(1.0)'), nullable=True),
    sa.Column('top_p', sa.REAL(), server_default=sa.text('(1.0)'), nullable=True),
    sa.Column('reasoning_effort', sa.TEXT(), server_default=sa.text("'Medium'"), nullable=True),
    sa.Column('context_size', sa.INTEGER(), server_default=sa.text('(20)'), nullable=True),
    sa.Column('top_k', sa.INTEGER(), nullable=True),
    sa.Column('top_a', sa.REAL(), nullable=True),
    sa.Column('min_p', sa.REAL(), nullable=True),
    sa.Column('max_tokens', sa.INTEGER(), nullable=True),
    sa.Column('frequency_penalty', sa.REAL(), server_default=sa.text('(0.0)'), nullable=True),
    sa.Column('presence_penalty', sa.REAL(), server_default=sa.text('(0.0)'), nullable=True),
    sa.Column('repetition_penalty', sa.REAL(), server_default=sa.text('(1.0)'), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['active_preset_id'], ['prompt_presets.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_prompt_configurations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_prompt_configurations_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_prompt_configurations_preset_id'), ['active_preset_id'], unique=False)

    # ### end Alembic commands ###
